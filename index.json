[{"content":" Quick links # Resources Details New Testament Psalm 20:7 (Global) CM by Moomoocow Scroll to find the CM stuff PureDB Friend Search Index Support Card Tier List euophrys (Does not account for skills, purely stats) Skill Spreadsheet dylank0 Training Event Helper Parenting \u0026amp; Gene Guide crazyfellow G1 Race Factors Race Simulator (EN) Race Simulator (JP) Stamina vs Guts # Distance/Type Guts Threshold Short 210 Mile/Dirt 260 Mid 320 Long (3000m) 380 Long (3600m) 440 Required Stamina Chart # Distance Front Pace Late End Sprint - 1400m 460 520 490 500 Mile - 1800m 700 790 740 750 Risky Mile - 1800m + 1 Gold 540 620 580 590 Medium - 2400m 980 1100 1020 1040 Risky Med - 2400m + 1 Gold 770 880 820 830 Long - 2600m 1160 1200 1200 990 Risky Long - 2600m + 1–2 Gold 920 1050 980 780 Long - 3200m + 2 Gold 940 1070 980 1000 SP Needed # Rarity Start Level End Level Required Support Points Money Needed SSR Lv0 Lv30 23,885 47,770 SSR Lv29 Lv35 13,900 27,800 SSR Lv34 Lv40 19,150 38,300 SSR Lv39 Lv45 26,000 52,000 SSR Lv44 Lv50 35,250 70,500 SSR Lv0 Lv50 118,185 236,370 SR Lv0 Lv25 10,740 21,480 SR Lv24 Lv30 8,350 16,700 SR Lv29 Lv35 12,600 25,200 SR Lv34 Lv40 18,100 36,200 SR Lv39 Lv45 25,200 50,400 SR Lv0 Lv45 74,990 149,980 ","date":"9 September 2025","externalUrl":null,"permalink":"/uma/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/uma/foo/","section":"Foos","summary":"","title":"Foos","type":"foo"},{"content":"❯ python3 gacha_calc.py 2000000\nPull Count Cumulative % 1 999826 0.4999 2 1000828 1.0003 3 998477 1.4996 4 999010 1.9991 5 999577 2.4989 6 998212 2.998 7 998362 3.4971 8 998472 3.9964 9 996468 4.4946 10 997293 4.9933 11 996301 5.4914 12 993249 5.988 13 993385 6.4847 14 995631 6.9825 15 990855 7.478 16 989958 7.973 17 986525 8.4662 18 988053 8.9602 19 986717 9.4536 20 985380 9.9463 21 982572 10.4376 22 981931 10.9285 23 978338 11.4177 24 977173 11.9063 25 976601 12.3946 26 973329 12.8813 27 972869 13.3677 28 971257 13.8533 29 969336 14.338 30 965614 14.8208 31 962623 15.3021 32 962627 15.7834 33 959891 16.2634 34 954670 16.7407 35 954764 17.2181 36 952620 17.6944 37 948858 18.1688 38 947757 18.6427 39 943822 19.1146 40 942918 19.5861 41 938018 20.0551 42 935904 20.523 43 933390 20.9897 44 930490 21.455 45 929088 21.9195 46 926355 22.3827 47 922653 22.844 48 918538 23.3033 49 916525 23.7616 50 914271 24.2187 51 909097 24.6732 52 907089 25.1268 53 904967 25.5793 54 899167 26.0289 55 897219 26.4775 56 894321 26.9246 57 889781 27.3695 58 3428373 29.0837 59 5709222 31.9383 60 7429928 35.6533 61 8398403 39.8525 62 8552299 44.1286 63 8007872 48.1326 64 6969533 51.6173 65 5689923 54.4623 66 4428981 56.6768 67 3338713 58.3461 68 2511523 59.6019 69 1945828 60.5748 70 1819561 61.4846 71 1265356 62.1173 72 1246325 62.7404 73 1229607 63.3552 74 1213692 63.9621 75 1196626 64.5604 76 1180151 65.1505 77 1164134 65.7325 78 1145876 66.3055 79 1129902 66.8704 80 1113813 67.4273 81 1099019 67.9768 82 1083978 68.5188 83 1068453 69.0531 84 1053438 69.5798 85 1038490 70.099 86 1025332 70.6117 87 1007700 71.1155 88 992837 71.612 89 979251 72.1016 90 966267 72.5847 91 952014 73.0607 92 939113 73.5303 93 928294 73.9944 94 912777 74.4508 95 899633 74.9006 96 887843 75.3446 97 872158 75.7806 98 862662 76.212 99 850135 76.637 100 837613 77.0558 101 823019 77.4673 102 812568 77.8736 103 801214 78.2742 104 788586 78.6685 105 778711 79.0579 106 765553 79.4407 107 756562 79.8189 108 743635 80.1908 109 735072 80.5583 110 721997 80.9193 111 713485 81.276 112 702340 81.6272 113 693221 81.9738 114 681980 82.3148 115 670830 82.6502 116 727606 83.014 117 894776 83.4614 118 1194633 84.0587 119 1609950 84.8637 120 2092565 85.91 121 2568137 87.1941 122 2961259 88.6747 123 3213486 90.2814 124 3285558 91.9242 125 3174942 93.5117 126 2909553 94.9665 127 2537016 96.235 128 2111829 97.2909 129 1674484 98.1281 130 1262275 98.7593 131 909038 99.2138 132 624030 99.5258 133 405347 99.7285 134 250643 99.8538 135 145616 99.9266 136 78585 99.9659 137 39661 99.9857 138 18165 99.9948 139 7378 99.9985 140 3025 100.0 Code # import random import argparse from typing import List from tabulate import tabulate PITY = 70 SOFT_PITY_START = 58 SOFT_PITY_INCREMENT = .045 RATE = .01 def soft_pity_calc(i: int) -\u0026gt; float: # Pity rate for a SSR if i \u0026lt; SOFT_PITY_START: return RATE if i == PITY: return 1.0 return RATE + (i - SOFT_PITY_START + 1) * SOFT_PITY_INCREMENT def gacha_until_rate_up() -\u0026gt; int: \u0026#34;\u0026#34;\u0026#34; Returns the random variable pull count needed to get the target rate up \u0026#34;\u0026#34;\u0026#34; # soft_count is used to determine the soft pity probability increase at SOFT_PITY_START count = soft_count = 0 rolled_qiqi = False for _ in range(PITY * 2): soft_count, count = soft_count + 1, count + 1 # Rolled an SSR if random.random() \u0026lt; soft_pity_calc(soft_count): # 50/50 pity or won 50/50 if rolled_qiqi or random.random() \u0026lt; .5: return count else: rolled_qiqi = True soft_count = 0 # return count def sim(trials: int) -\u0026gt; List[int]: \u0026#34;\u0026#34;\u0026#34; Given a number of trials, output an array where the ith value is the amount of people that have gotten their wife at that pull \u0026#34;\u0026#34;\u0026#34; # pulls_to_gacha[i] += 1 if received morry\u0026#39;s wife at the ith pull pulls_to_gacha = [0 for _ in range(PITY * 2 + 1)] for _ in range(trials): pulls_to_gacha[gacha_until_rate_up()] += 1 return pulls_to_gacha def gacha_table(sim_results: List[int]) -\u0026gt; None: \u0026#34;\u0026#34;\u0026#34; Takes the output of sim(trials) and prints a table with: - Pull number - Number of players who got the target at that pull - Cumulative % of players who have obtained the target by that pull \u0026#34;\u0026#34;\u0026#34; total_players = sum(sim_results) cumulative = 0 table = [] for pull, count in enumerate(sim_results): if count == 0: continue # skip pulls with zero counts cumulative += count cumulative_pct = cumulative / total_players * 100 table.append([pull, count, round(cumulative_pct, 4)]) print(tabulate(table, headers=[\u0026#34;Pull\u0026#34;, \u0026#34;Count\u0026#34;, \u0026#34;Cumulative %\u0026#34;], tablefmt=\u0026#34;pretty\u0026#34;)) def main(): parser = argparse.ArgumentParser( description=\u0026#34;morry\u0026#34; ) parser.add_argument( \u0026#34;trials\u0026#34;, type=int, help=\u0026#34;Number of times to gacha sim\u0026#34; ) args = parser.parse_args() gacha_table(sim(args.trials)) # print(soft_pity_calc(58)) # print(soft_pity_calc(69)) # print(soft_pity_calc(70)) if __name__ == \u0026#34;__main__\u0026#34;: main() ","date":"9 September 2025","externalUrl":null,"permalink":"/uma/foo/morry/","section":"Foos","summary":"","title":"Morry","type":"foo"},{"content":"","date":"4 August 2025","externalUrl":null,"permalink":"/uma/cm/","section":"CM","summary":"","title":"CM","type":"cm"},{"content":" TODO # some bullshit that shows my shitty horses/lineages and maybe the slurs they should be called if they lose unsure no writeup just archival for the memories and my perusal wqewq\n","date":"4 August 2025","externalUrl":null,"permalink":"/uma/cm/taurus-08-17-2025/","section":"CM","summary":"","title":"Taurus Cup - 8/17/2025","type":"cm"},{"content":"","externalUrl":null,"permalink":"/uma/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/uma/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/uma/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/uma/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]